<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.camunda.latera</groupId>
  <artifactId>bss</artifactId>
  <version>1.6</version>
  <packaging>jar</packaging>
  <scm>
    <connection>scm:git:git@github.com:latera/camunda-ext.git</connection>
    <developerConnection>scm:git:git@github.com:latera/camunda-ext.git</developerConnection>
    <url>https://github.com/latera/camunda-ext</url>
  </scm>
  <properties>
    <kotlin.version>1.4.32</kotlin.version>
    <junit-jupiter.version>5.7.2</junit-jupiter.version>
    <junit-vintage.version>5.7.2</junit-vintage.version>
    <assertj-core.version>3.20.1</assertj-core.version>
    <skipTests>true</skipTests>
    <jacoco.skip>${skipTests}</jacoco.skip>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <groovy.version>2.4.16</groovy.version>
    <gmavenplus-plugin.version>1.8.0</gmavenplus-plugin.version>
    <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
    <maven-surefire-plugin.version>2.22.2</maven-surefire-plugin.version>
    <maven-dependency-plugin.version>3.1.1</maven-dependency-plugin.version>
    <buildnumber-maven-plugin.version>1.4</buildnumber-maven-plugin.version>
    <maven-jar-plugin.version>2.3.2</maven-jar-plugin.version>
    <camunda.version>7.9.0</camunda.version>
    <camunda.commons.version>1.6.0</camunda.commons.version>
    <slf4j-api.version>1.7.7</slf4j-api.version>
    <slf4j-simple.version>1.7.13</slf4j-simple.version>
    <commons-io.version>2.6</commons-io.version>
    <http-builder.version>0.7.1</http-builder.version>
    <http-builder-ng.version>1.0.3</http-builder-ng.version>
    <commons-beanutils.version>1.9.4</commons-beanutils.version>
    <commons-lang.version>2.5</commons-lang.version>
    <commons-codec.version>1.11</commons-codec.version>
    <commons-collections.version>3.2.1</commons-collections.version>
    <ezmorph.version>1.0.6</ezmorph.version>
    <json-lib.version>2.4</json-lib.version>
    <json-lib.classifier>jdk15</json-lib.classifier>
    <groovy-xmlrpc.version>0.8</groovy-xmlrpc.version>
    <httpclient.version>4.5.6</httpclient.version>
    <httpcore.version>4.4.10</httpcore.version>
    <javax_mail.version>1.4.7</javax_mail.version>
    <javax_activation.version>1.1.1</javax_activation.version>
    <minio.version>6.0.8</minio.version>
    <junit.version>4.13.2</junit.version>
    <spock-core.version>1.3-groovy-2.4</spock-core.version>
    <spock-reports.version>1.6.2</spock-reports.version>
    <sonar-maven-plugin.version>3.7.0.1746</sonar-maven-plugin.version>
    <sonar.projectKey>camunda-ext</sonar.projectKey>
    <sonar.projectName>camunda-ext</sonar.projectName>
    <ktor.version>1.5.4</ktor.version>
    <gson.version>2.8.6</gson.version>
    <!--
    <sonar.host.url>https://sonarcloud.io</sonar.host.url>
    <sonar.organization>latera</sonar.organization>
    -->
    <sonar.host.url>http://localhost:9000</sonar.host.url>
    <sonar.sources>src</sonar.sources>
    <sonar.tests>test</sonar.tests>
    <sonar.inclusions>**/**</sonar.inclusions>
    <sonar.language>grvy</sonar.language>
    <sonar.java.source>${maven.compiler.source}</sonar.java.source>
    <sonar.java.target>${maven.compiler.target}</sonar.java.target>
    <sonar.core.codeCoveragePlugion>jacoco</sonar.core.codeCoveragePlugion>
    <sonar.groovy.jacoco.reportPath>target/jacoco.exec</sonar.groovy.jacoco.reportPath>
    <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
    <jacoco-maven-plugin.version>0.8.5</jacoco-maven-plugin.version>
    <groovydoc-maven-plugin.version>2.1</groovydoc-maven-plugin.version>
    <vavr.version>0.10.2</vavr.version>
    <snakeyaml.version>1.26</snakeyaml.version>
    <dokka.version>0.10.0</dokka.version>
  </properties>
  <repositories>
    <repository>
      <id>jcenter</id>
      <url>https://jcenter.bintray.com</url>
    </repository>
    <repository>
      <id>maven.org</id>
      <url>https://repo1.maven.org/maven2</url>
    </repository>
  </repositories>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.camunda.bpm</groupId>
        <artifactId>camunda-bom</artifactId>
        <version>${camunda.version}</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <dependencies>
    <dependency>
      <groupId>io.ktor</groupId>
      <artifactId>ktor-client</artifactId>
      <version>${ktor.version}</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.groovy</groupId>
      <artifactId>groovy-all</artifactId>
      <version>${groovy.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.camunda.bpm</groupId>
      <artifactId>camunda-engine</artifactId>
      <version>${camunda.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.jetbrains.kotlin</groupId>
      <artifactId>kotlin-stdlib</artifactId>
      <version>${kotlin.version}</version>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>${assertj-core.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <version>${junit-jupiter.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>${junit-jupiter.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.vintage</groupId>
      <artifactId>junit-vintage-engine</artifactId>
      <version>${junit-vintage.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.camunda.bpm.model</groupId>
      <artifactId>camunda-bpmn-model</artifactId>
      <version>${camunda.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.camunda.bpm.model</groupId>
      <artifactId>camunda-xml-model</artifactId>
      <version>${camunda.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.camunda.commons</groupId>
      <artifactId>camunda-commons-utils</artifactId>
      <version>${camunda.commons.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.camunda.commons</groupId>
      <artifactId>camunda-commons-typed-values</artifactId>
      <version>${camunda.commons.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j-api.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>${commons-io.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.codehaus.groovy.modules.http-builder</groupId>
      <artifactId>http-builder</artifactId>
      <version>${http-builder.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>io.github.http-builder-ng</groupId>
      <artifactId>http-builder-ng-core</artifactId>
      <version>${http-builder-ng.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>io.github.http-builder-ng</groupId>
      <artifactId>http-builder-ng-okhttp</artifactId>
      <version>${http-builder-ng.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>commons-beanutils</groupId>
      <artifactId>commons-beanutils</artifactId>
      <version>${commons-beanutils.version}</version>
    </dependency>
    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
      <version>${commons-lang.version}</version>
    </dependency>
    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
      <version>${commons-codec.version}</version>
    </dependency>
    <dependency>
      <groupId>net.sf.ezmorph</groupId>
      <artifactId>ezmorph</artifactId>
      <version>${ezmorph.version}</version>
    </dependency>
    <dependency>
      <groupId>net.sf.json-lib</groupId>
      <artifactId>json-lib</artifactId>
      <version>${json-lib.version}</version>
      <classifier>${json-lib.classifier}</classifier>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.codehaus.groovy</groupId>
      <artifactId>groovy-json</artifactId>
      <version>${groovy.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.codehaus.groovy</groupId>
      <artifactId>groovy-xmlrpc</artifactId>
      <version>${groovy-xmlrpc.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
      <version>${httpclient.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpcore</artifactId>
      <version>${httpcore.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>javax.mail</groupId>
      <artifactId>mail</artifactId>
      <version>${javax_mail.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>javax.activation</groupId>
      <artifactId>activation</artifactId>
      <version>${javax_activation.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>io.minio</groupId>
      <artifactId>minio</artifactId>
      <version>${minio.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.spockframework</groupId>
      <artifactId>spock-core</artifactId>
      <version>${spock-core.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.athaydes</groupId>
      <artifactId>spock-reports</artifactId>
      <version>${spock-reports.version}</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>*</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-simple</artifactId>
      <version>${slf4j-simple.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
      <version>${gson.version}</version>
    </dependency>
    <dependency>
      <groupId>io.ktor</groupId>
      <artifactId>ktor-client-apache</artifactId>
      <version>${ktor.version}</version>
    </dependency>
    <dependency>
      <groupId>io.ktor</groupId>
      <artifactId>ktor-client-auth-jvm</artifactId>
      <version>${ktor.version}</version>
    </dependency>
    <dependency>
      <groupId>io.ktor</groupId>
      <artifactId>ktor-client-json-jvm</artifactId>
      <version>${ktor.version}</version>
    </dependency>
    <dependency>
      <groupId>io.ktor</groupId>
      <artifactId>ktor-client-gson</artifactId>
      <version>${ktor.version}</version>
    </dependency>
    <dependency>
      <groupId>io.ktor</groupId>
      <artifactId>ktor-client-auth-basic</artifactId>
      <version>${ktor.version}</version>
    </dependency>
    <dependency>
      <groupId>io.vavr</groupId>
      <artifactId>vavr</artifactId>
      <version>${vavr.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.yaml</groupId>
      <artifactId>snakeyaml</artifactId>
      <version>${snakeyaml.version}</version>
    </dependency>
    <dependency>
      <groupId>io.ktor</groupId>
      <artifactId>ktor-client-mock</artifactId>
      <version>${ktor.version}</version>
    </dependency>
    <dependency>
      <groupId>io.ktor</groupId>
      <artifactId>ktor-client-mock-jvm</artifactId>
      <version>${ktor.version}</version>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>org.codehaus.gmavenplus</groupId>
        <artifactId>gmavenplus-plugin</artifactId>
        <version>${gmavenplus-plugin.version}</version>
        <configuration>
          <sources>
            <source>
              <directory>${project.basedir}/src</directory>
              <includes>
                <include>**/*.groovy</include>
              </includes>
            </source>
          </sources>
          <testSources>
            <source>
              <directory>${project.basedir}/test</directory>
              <includes>
                <include>**/*.groovy</include>
              </includes>
            </source>
          </testSources>
          <sourceEncoding>${project.build.sourceEncoding}</sourceEncoding>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>addSources</goal>
              <goal>addTestSources</goal>
              <goal>generateStubs</goal>
              <goal>generateTestStubs</goal>
              <goal>compile</goal>
              <goal>compileTests</goal>
              <goal>removeStubs</goal>
              <goal>removeTestStubs</goal>
            </goals>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>org.codehaus.groovy</groupId>
            <artifactId>groovy-all</artifactId>
            <version>${groovy.version}</version>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <artifactId>kotlin-maven-plugin</artifactId>
        <groupId>org.jetbrains.kotlin</groupId>
        <version>${kotlin.version}</version>
        <executions>
          <execution>
            <id>compile</id>
            <goals>
              <goal>compile</goal>
            </goals>
            <configuration>
              <sourceDirs>
                <sourceDir>${project.basedir}/src/org/camunda/latera/kotlin</sourceDir>
              </sourceDirs>
            </configuration>
          </execution>
          <execution>
            <id>test-compile</id>
            <goals>
              <goal>test-compile</goal>
            </goals>
            <configuration>
              <sourceDirs>
                <sourceDir>${project.basedir}/src/org/camunda/latera/kotlin</sourceDir>
                <testSourceDirectory>${project.basedir}/test/kotlin</testSourceDirectory>
              </sourceDirs>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>buildnumber-maven-plugin</artifactId>
        <version>${buildnumber-maven-plugin.version}</version>
        <executions>
          <execution>
            <phase>validate</phase>
            <goals>
              <goal>create</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <doCheck>false</doCheck>
          <doUpdate>false</doUpdate>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>${maven-jar-plugin.version}</version>
        <configuration>
          <finalName>camunda-ext-${project.version}</finalName>
          <archive>
            <manifest>
              <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
              <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
            </manifest>
            <manifestEntries>
              <Implementation-Build>${buildNumber}</Implementation-Build>
            </manifestEntries>
          </archive>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin.version}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>${maven-dependency-plugin.version}</version>
        <configuration>
          <outputDirectory>./target/dependencies/</outputDirectory>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven-surefire-plugin.version}</version>
        <configuration>
          <skipTests>${skipTests}</skipTests>
          <includes>
            <include>**/*Test.java</include>
            <include>**/*Test.groovy</include>
            <include>**/*Spec.java</include>
            <include>**/*Spec.groovy</include>
          </includes>
          <systemPropertyVariables>
            <com.athaydes.spockframework.report.IReportCreator>com.athaydes.spockframework.report.internal.CustomHtmlReportCreator</com.athaydes.spockframework.report.IReportCreator>
            <com.athaydes.spockframework.report.projectName>${project.groupId}.${project.artifactId}</com.athaydes.spockframework.report.projectName>
            <com.athaydes.spockframework.report.projectVersion>${project.version}</com.athaydes.spockframework.report.projectVersion>
            <com.athaydes.spockframework.report.outputDir>docs/test-reports</com.athaydes.spockframework.report.outputDir>
            <com.athaydes.spockframework.report.aggregatedJsonReportDir>target/spock-reports</com.athaydes.spockframework.report.aggregatedJsonReportDir>
            <com.athaydes.spockframework.report.showCodeBlocks>true</com.athaydes.spockframework.report.showCodeBlocks>
            <com.athaydes.spockframework.report.testSourceRoots>${project.basedir}/test</com.athaydes.spockframework.report.testSourceRoots>
            <com.athaydes.spockframework.report.internal.CustomHtmlReportCreator.featureReportCss>spock-feature-report.css</com.athaydes.spockframework.report.internal.CustomHtmlReportCreator.featureReportCss>
            <com.athaydes.spockframework.report.internal.CustomHtmlReportCreator.summaryReportCss>spock-summary-report.css</com.athaydes.spockframework.report.internal.CustomHtmlReportCreator.summaryReportCss>
            <com.athaydes.spockframework.report.internal.CustomHtmlReportCreator.printThrowableStackTrace>false</com.athaydes.spockframework.report.internal.CustomHtmlReportCreator.printThrowableStackTrace>
            <com.athaydes.spockframework.report.internal.CustomHtmlReportCreator.inlineCss>true</com.athaydes.spockframework.report.internal.CustomHtmlReportCreator.inlineCss>
            <com.athaydes.spockframework.report.internal.CustomHtmlReportCreator.enabled>true</com.athaydes.spockframework.report.internal.CustomHtmlReportCreator.enabled>
            <com.athaydes.spockframework.report.internal.CustomHtmlReportCreator.specSummaryNameOption>class_name_and_title</com.athaydes.spockframework.report.internal.CustomHtmlReportCreator.specSummaryNameOption>
            <com.athaydes.spockframework.report.internal.CustomHtmlReportCreator.excludeToc>false</com.athaydes.spockframework.report.internal.CustomHtmlReportCreator.excludeToc>
          </systemPropertyVariables>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${jacoco-maven-plugin.version}</version>
        <executions>
          <execution>
            <id>prepare-agent</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>report-aggregate</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.sonarsource.scanner.maven</groupId>
        <artifactId>sonar-maven-plugin</artifactId>
        <version>${sonar-maven-plugin.version}</version>
      </plugin>
      <!--
      <plugin>
        <groupId>org.eluder.coveralls</groupId>
        <artifactId>coveralls-maven-plugin</artifactId>
        <version>4.3.0</version>
        <configuration>
          <repoToken>yourcoverallsprojectrepositorytoken</repoToken>
        </configuration>
        <executions>
          <execution>
            <id>report-export</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      -->
      <plugin>
        <groupId>com.bluetrainsoftware.maven</groupId>
        <artifactId>groovydoc-maven-plugin</artifactId>
        <version>${groovydoc-maven-plugin.version}</version>
        <configuration>
          <destinationDirectory>${project.basedir}/docs</destinationDirectory>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.jetbrains.dokka</groupId>
        <artifactId>dokka-maven-plugin</artifactId>
        <version>${dokka.version}</version>
        <executions>
          <execution>
            <phase>pre-site</phase>
            <goals>
              <goal>dokka</goal>
              <goal>javadoc</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <outputDir>${project.basedir}/kotlin-docs</outputDir>
          <sourceDirectories>
            <dir>${project.basedir}/src/org/camunda/latera/kotlin</dir>
          </sourceDirectories>
          <sourceLinks>
            <link>
              <lineSuffix>#L</lineSuffix>
            </link>
          </sourceLinks>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <pluginRepositories>
    <pluginRepository>
      <id>jcenter</id>
      <name>JCenter</name>
      <url>https://jcenter.bintray.com/</url>
      <releases>
        <enabled>true</enabled>
      </releases>
    </pluginRepository>
  </pluginRepositories>
</project>
